{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./Board.js","webpack:///./ComputerPlayer.js","webpack:///./Game.js","webpack:///./HumanPlayer.js","webpack:///./View.js","webpack:///./index.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;;;;;;ACnHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gC;;;;;;;;;;;;;;ACVA,oBAAoB,mBAAO,CAAC,0CAAkB;AAC9C,uBAAuB,mBAAO,CAAC,gDAAqB;AACpD,cAAc,mBAAO,CAAC,8BAAY;AAClC;AACA;AACA;AACA;AACA,qC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEe,mEAAI,E;;AAEnB;AACA,c;;;;;;;;;;;AC7DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEe,mEAAI,E;;;;;;;;;;;;AClEnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6B;AACc;AACM;AACpB;;AAE7B;AACA,mBAAmB,gDAAI;AACvB,UAAU,sDAAW;AACrB,UAAU,sDAAW;AACrB;AACA;AACA,QAAQ,gDAAI;;AAEZ,CAAC,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","class Board {\n  constructor() {\n    this.board = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n    this.movesRemaining = 9;\n    this.winner = undefined;\n    this.MOVES = {\n      1: [0, 0],\n      2: [0, 1],\n      3: [0, 2],\n      4: [1, 0],\n      5: [1, 1],\n      6: [1, 2],\n      7: [2, 0],\n      8: [2, 1],\n      9: [2, 2],\n    };\n  }\n\n  reveal() {\n    return this.board; \n  }\n  \n  isValidMove(move) {\n    if (!this.MOVES[move]) return false;\n    let [row, col] = this.MOVES[move];\n    return typeof this.board[row][col] !== \"string\";\n  }\n\n  placeMark(sym, move) {\n    let [row, col] = this.MOVES[move];\n    this.board[row][col] = sym;\n    this.movesRemaining--;\n  }\n\n  findWinner() {\n    this.isHorizontal()\n    this.isVertical()\n    this.isDiagnol()\n    if(this.movesRemaining === 0 && !this.winner) {\n        this.winner = \"tie\"\n    }\n\n    return this.winner;\n    // update winner to the sym that wins if there is a winner.\n    //If there's no winner and moves are at 0, make winner = \"tie\"\n  }\n\n  isHorizontal(board = this.board) {\n    board.forEach(row => {\n      if (row.every(el => el === row[0])) {\n        this.winner = row[0];\n      }\n    });\n    return this.winner;\n  }\n\n  isVertical() {\n      let transposed = this.transpose();\n      return this.isHorizontal(transposed)\n  }\n\n  isDiagnol() {\n    let leftDown = [];\n    let rightDown = [];\n    for(let i = 0; i <this.board.length; i++) {\n        leftDown.push(this.board[i][i])\n        rightDown.push(this.board[this.board.length - i - 1][i])\n    }\n    if(leftDown.every(el => el === leftDown[0])) {\n        this.winner = leftDown[0]\n    }\n    if(rightDown.every(el => el === rightDown[0])) {\n        this.winner = rightDown[0]\n    }\n    return this.winner\n}\n  transpose() {\n    let dup = [];\n    this.board.forEach((row, i) => {\n      dup[i] = [];\n      row.forEach((_, j) => {\n        dup[i][j] = this.board[j][i];\n      });\n    });\n    return dup;\n  }\n\n  displayBoard() {\n      this.board.forEach((row, i) => {\n          console.log(row.join(\" | \"))\n          if(i !== this.board.length - 1) {\n              console.log(\"---------\")\n\n          }\n      })\n  }\n\n//   Warm up! In your board class create a\n//    displayBoard method that prints the boards state to the console.\n//     Then in the Game file create a class called Game.\n//      It should take two players as arguments. In the constructor is \n//      should set a currentPlayer,\n//    and create a new instance of the board.\n}\n\nmodule.exports = Board; \n\n// let board = new Board();\n// board.displayBoard()\n// console.log(board.board)\n// board.placeMark(\"X\", 3)\n// board.placeMark(\"X\", 5)\n// board.placeMark(\"X\", 7)\n// // board.placeMark(\"X\", 7)\n\n// console.log(board.isDiagnol())","class ComputerPlayer {\n    constructor(name, sym) {\n        this.name = name;\n        this.sym = sym;\n    }\n\n    getMove() {\n        return Math.floor(Math.random() * 9 )\n    }\n}\n\nmodule.exports = ComputerPlayer;","\nconst HumanPlayer = require(\"./HumanPlayer.js\")\nconst ComputerPlayer = require(\"./ComputerPlayer.js\")\nconst Board = require(\"./Board.js\")\nclass Game {\n    constructor(player1, player2) {\n        this.player1 = player1;\n        this.player2 = player2;\n        this.currentPlayer = player1; \n        this.board = new Board()\n    }\n\n    playAgain() {\n        this.board = new Board();\n    }\n\n    switchPlayers() {\n        this.currentPlayer =\n         this.currentPlayer === this.player1 ? this.player2 : this.player1\n    }\n\n    gameOver() {\n        return this.board.findWinner(); \n    }\n\n    play() {\n        while(!this.gameOver()) {\n            console.clear();\n            this.board.displayBoard();\n            let move = false;\n            while(!this.board.isValidMove(move)) {\n                move = this.currentPlayer.getMove();\n            }\n            this.board.placeMark(this.currentPlayer.sym, move);\n            this.switchPlayers();\n        }\n\n        this.board.displayBoard();\n        if(this.board.winner === this.player1.sym) {\n            console.log(this.player1.name + \" wins!!! \")\n        } else if (this.board.winner === this.player2.sym) {\n            console.log(this.player2.name + \" wins!!! \");\n        } else {\n            console.log(\"TIE GAME!! YOU BOTH ARE LOSERS\")\n        }\n\n    }\n    showWinner() {\n        if (this.board.winner === this.player1.sym) {\n           return this.player1.name + \" wins!!! \"\n        } else if (this.board.winner === this.player2.sym) {\n            return this.player2.name + \" wins!!! \"\n        } else {\n           return \"TIE GAME!! YOU BOTH ARE LOSERS\"\n        }\n    }\n}\n\nexport default Game; \n\n// let game = new Game(new HumanPlayer(\"corey\", \"X\"), new ComputerPlayer(\"Beavis\", \"O\"))\n// game.play()","// const readline = require(\"readline-sync\");\n\nclass HumanPlayer {\n    constructor(name, sym) {\n        this.name = name;\n        this.sym = sym;\n    }\n    getMove() {\n        return readline.question(\"Enter Your Move!\")\n    }\n}\n\nmodule.exports = HumanPlayer;\n","\nclass View {\n    constructor(game, el) {\n        this.game = game;\n        this.el = el   \n        this.play() \n        this.playAgain()\n    }\n\n    playAgain() {\n        let button = document.querySelector(\"#playAgain\");\n        button.addEventListener(\"click\",()=> {\n            this.game.playAgain();\n            this.play();\n        })\n\n\n    }\n\n    play() {\n        let playerText = document.querySelector(\"#playerText\");\n        if(this.game.gameOver()) {\n            playerText.innerText = this.game.showWinner();\n            this.displayBoard();\n        } else {\n            this.displayBoard();\n            this.bindEvents();\n            playerText.innerText = this.game.currentPlayer.name + \" it's your turn!\"\n        }\n    }\n\n    displayBoard() {\n        let gameDiv = document.createElement(\"div\")\n        gameDiv.id = \"boardDiv\";\n        this.el.innerHTML = \"\";\n        this.game.board.reveal().forEach(row => {\n            let ul = document.createElement(\"ul\");\n            ul.classList.add(\"row\");\n            row.forEach(val => {\n                let li = document.createElement(\"li\");\n                li.innerText = val;\n                ul.appendChild(li)\n            })\n            gameDiv.appendChild(ul);\n        })\n        this.el.appendChild(gameDiv)\n    }\n\n    bindEvents() {\n        let tic = document.querySelector(\"#boardDiv\")\n        tic.addEventListener(\"click\", (e) => {\n            let selected = e.target.innerText;\n            this.makeMove(selected);\n        })\n\n    }\n    makeMove(move) {\n        if(this.game.board.isValidMove(move)) {\n            this.game.board.placeMark(this.game.currentPlayer.sym, move)\n            this.game.switchPlayers();\n        }\n        this.play();\n    }\n\n}\n\nexport default View; ","import Game from \"./Game.js\";\nimport HumanPlayer from \"./HumanPlayer.js\";\nimport ComputerPlayer from \"./ComputerPlayer.js\";\nimport View from \"./View.js\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    let game = new Game(\n      new HumanPlayer(\"Corey\", \"X\"),\n      new HumanPlayer(\"Beavis\", \"O\")\n    );\n    let el = document.querySelector(\"#ttt\");\n    new View(game, el)\n\n})"],"sourceRoot":""}